# -*- coding: utf-8 -*-
"""ModeloAIconLibrerias.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1370FLOwaVF53lG_j8Al2o7ud1KNC3kad
"""

# Importamos las librerias
import pandas as pd
import numpy as np
from math import sqrt
from collections import Counter

# Ponemos los nombres de las columnas e importamos los datos
columns = ["Classification", "Alcohol","Malic acid","Ash","Alcalinity of ash", "Magnesium", "Total phenols", "Flavanoids", "Nonflavanoid phenols"
 	,"Proanthocyanins", "Color intensity", "Hue", "OD280/OD315 of diluted wines", "Proline"]

df_wine =  pd.read_csv('/content/drive/Shareddrives/IA Bloque 1/wine.data', names = columns)

df_wine.head()

# Dividimos en variables predictoras y variable a predecir 
from sklearn.model_selection import train_test_split

X = df_wine[[ "Alcohol","Malic acid","Ash","Alcalinity of ash", "Magnesium", "Total phenols", "Flavanoids", "Nonflavanoid phenols"
 	,"Proanthocyanins", "Color intensity", "Hue", "OD280/OD315 of diluted wines", "Proline"]]

y = df_wine["Classification"]


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)

# Importamos el modelo de regresion logistica
from sklearn.linear_model import LogisticRegression
import warnings
warnings.filterwarnings("ignore")

# Probamos con 5 iteraciones

LogReg = LogisticRegression(max_iter = 5)
LogReg.fit(X_train, y_train)
y_pred = LogReg.predict(X_test)
print('Score', LogReg.score(X_test, y_test) * 100, '% con 5 iteraciones')
print()
# Probamos con 15 iteraciones

LogReg = LogisticRegression(max_iter = 15)
LogReg.fit(X_train, y_train)
y_pred = LogReg.predict(X_test)
print('Score', LogReg.score(X_test, y_test) * 100, '% con 15 iteraciones')

# Probamos con 50 iteraciones

LogReg = LogisticRegression(max_iter = 50)
LogReg.fit(X_train, y_train)
y_pred = LogReg.predict(X_test)
print('Score', LogReg.score(X_test, y_test) * 100, '% con 50 iteraciones')

# Probamos con 1000 iteraciones
LogReg = LogisticRegression(max_iter = 1000)
LogReg.fit(X_train, y_train)
y_pred = LogReg.predict(X_test)
print('Score', LogReg.score(X_test, y_test) * 100, '% con 1000 iteraciones')

# Probamos con 10000 iteraciones
LogReg = LogisticRegression(max_iter = 10000)
LogReg.fit(X_train, y_train)
y_pred = LogReg.predict(X_test)
print('Score', LogReg.score(X_test, y_test) * 100, '% con 10000 iteraciones')